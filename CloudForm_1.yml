Resources:
 VPC: 
    Type: AWS::EC2::VPC
    Properties: 
        CidrBlock: 10.0.0.0/16
        EnableDnsSupport: true
        EnableDnsHostnames: true
        Tags: 
            - Key: "Name"
              Value: "Mini-Network Project"
              
 InternetGateway:
    Type: AWS::EC2::InternetGateway
    Properties:
        Tags: 
            - Key: "Name"
              Value: "Mini-Network Project Internet Gateway"
            
 InternetGatewayAttachment:
    Type: AWS::EC2::VPCGatewayAttachment
    Properties:
        InternetGatewayId: !Ref InternetGateway
        VpcId: !Ref VPC
       
 PublicSubnetA:
    Type: AWS::EC2::Subnet
    Properties: 
        VpcId: !Ref VPC
        AvailabilityZone: us-east-1a
        CidrBlock: 10.0.0.0/24
        MapPublicIpOnLaunch: true
        Tags: 
            - Key: "Name"
              Value: "Public Subnet A"
            
 PrivateSubnetB:
    Type: AWS::EC2::Subnet
    Properties: 
        VpcId: !Ref VPC
        AvailabilityZone: us-east-1b
        CidrBlock: 10.0.1.0/24
        MapPublicIpOnLaunch: false
        Tags:
            - Key: "Name"
              Value: "Private Subnet B"
              
 RouteTable:
    Type: AWS::EC2::RouteTable
    Properties:
        VpcId: !Ref VPC
           
 InternetRoute: 
    Type: AWS::EC2::Route
    DependsOn: InternetGateway
    Properties:
        DestinationCidrBlock: 0.0.0.0/0
        GatewayId: !Ref InternetGateway
        RouteTableId: !Ref RouteTable
        
 PublicSubnetATableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
        RouteTableId: !Ref RouteTable
        SubnetId: !Ref PublicSubnetA
   
 SecurityGroup: 
    Type: AWS::EC2::SecurityGroup
    Properties: 
        GroupDescription: Security Group for the Bastion Host
        VpcId: !Ref VPC
        GroupName: "Bastion Host Security Group"
 
 SecurityGroupIngress:
    Type: AWS::EC2::SecurityGroupIngress
    Properties:
          GroupId: !Ref SecurityGroup
          IpProtocol: tcp
          FromPort: '22'
          ToPort: '22'
          CidrIp: 1.1.1.1/32

 EC2Instance:
    Type: AWS::EC2::Instance
    Properties:
        InstanceType: t2.micro
        SubnetId: !Ref PublicSubnetA
        ImageId: "ami-026b57f3c383c2eec"
        SecurityGroupIds: 
            - Ref: SecurityGroup
        
 EC2InstancePrivate:
    Type: AWS::EC2::Instance
    Properties:
        InstanceType: t2.micro
        SubnetId: !Ref PrivateSubnetB
        ImageId: "ami-026b57f3c383c2eec"

        
 ElasticIp:
    Type: AWS::EC2::EIP
    Properties:
        Domain: vpc
        InstanceId: !Ref EC2Instance
       